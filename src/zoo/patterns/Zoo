package zoo.patterns;

import java.util.ArrayList;
import java.util.List;

// ШАБЛОН SINGLETON
// Гарантує існування лише одного екземпляра цього класу в усій програмі
public class Zoo {
    // 1. Створюємо єдиний екземпляр одразу при завантаженні класу
    private static final Zoo INSTANCE = new Zoo();
    private final List<Enclosure> enclosures = new ArrayList<>();

    // 2. Робимо конструктор приватним, щоб заборонити створення екземплярів ззовні
    private Zoo() {}

    // 3. Надаємо публічний статичний метод для доступу до єдиного екземпляра
    public static Zoo getInstance() {
        return INSTANCE;
    }

    // GRASP: CREATOR
    // Клас Zoo відповідає за створення вольєрів (Enclosure), оскільки він їх агрегує та керує ними
    public void addEnclosure(Enclosure enclosure) {
        enclosures.add(enclosure);
        System.out.println("Новий вольєр додано до зоопарку.");
    }

    public Enclosure getEnclosure(int index) {
        if (index < 0 || index >= enclosures.size()) {
            return null;
        }
        return enclosures.get(index);
    }
}
